{
  "dump": {
    "prefix": [
      "dump"
    ],
    "description": "dump json formated",
    "body": [
      "func(v interface{}) {",
      "\ts, _ := json.MarshalIndent(v, \"\", \"  \")",
      "\tfmt.Printf(\"%s\\n\", s)",
      "}(${1})$0"
    ]
  },
  "recover": {
    "prefix": [
      "recover"
    ],
    "body": [
      "defer func() {",
      "\tif err := recover(); err != nil {",
      "\t\tlog.Printf(\"error: %v\", err)",
      "\t}",
      "}()"
    ]
  },
  "jsonwrite": {
    "prefix": [
      "jsonwrite"
    ],
    "body": [
      "content, _ := json.Marshal(bytes(\"\"))",
      "ioutil.WriteFile(\"data.json\", content, os.ModePerm)"
    ]
  },
  "jsonread": {
    "prefix": [
      "jsonread"
    ],
    "body": [
      "content, _ := ioutil.ReadFile(\"./config.json\")",
      "json.Unmarshal(content, &data)"
    ]
  }
}
